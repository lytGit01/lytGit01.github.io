(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{415:function(t,a,e){"use strict";e.r(a);var r=e(2),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"cache缓存状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache缓存状态码"}},[t._v("#")]),t._v(" cache缓存状态码")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("状态码")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("200(from meomory cache)")]),t._v(" "),a("td",[t._v("状态安为灰色不去请求服务器，直接获取内存资源，属于强制缓存")])]),t._v(" "),a("tr",[a("td",[t._v("200(from disk cache)")]),t._v(" "),a("td",[t._v("状态安为灰色不去请求服务器，直接获取磁盘资源，属于强制缓存")])]),t._v(" "),a("tr",[a("td",[t._v("200")]),t._v(" "),a("td",[t._v("请求服务器，获取资源")])]),t._v(" "),a("tr",[a("td",[t._v("304(from disk cache)")]),t._v(" "),a("td",[t._v("第一次请求request会返回if-None-Match，下次请求reposon携带Etag服务器会判断资源是否更新，未更新返回304")])])])]),t._v(" "),a("h3",{attrs:{id:"强制缓存-协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存-协商缓存"}},[t._v("#")]),t._v(" 强制缓存/协商缓存")]),t._v(" "),a("blockquote",[a("p",[t._v("强制缓存就是，用户第一次访问页面之后，浏览器将数据存在缓存中，在过期时间之内，都不会再请求服务器。\n是否使用强制缓存在于资源是否过期，该过期时间从第一次请求的服务器响应头中获取。如果在过期时间内，从缓存中读取，如果超出过期时间，则使用协商缓存（下面会讲）。")])]),t._v(" "),a("h3",{attrs:{id:"expires-http1-和cache-control-http1-1-其中cache-control优先级比expires高。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires-http1-和cache-control-http1-1-其中cache-control优先级比expires高。"}},[t._v("#")]),t._v(" Expires(http1)和Cache-Control(http1.1) 其中Cache-Control优先级比Expires高。")]),t._v(" "),a("blockquote",[a("p",[t._v("协商缓存，从字面意思，就是要协商，是浏览器和服务器协商，那么浏览器每次都要和服务器通信。\n在第一次请求服务器时，服务器会返回资源，并且返回一个资源的缓存标识，一起存到浏览器的缓存数据库。\n当第二次请求资源时，浏览器会首先将缓存标识发送给服务器，服务器拿到标识后判断标识是否匹配，\n如果不匹配，表示资源有更新，服务器会将新数据和新的缓存标识一起返回到浏览器；如果缓存标识匹配，表示资源没有更新，并且返回 304 状态码，浏览器就读取本地缓存服务器中的数据。")])]),t._v(" "),a("h4",{attrs:{id:"etag-if-none-match-last-modified-if-modified-since"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-none-match-last-modified-if-modified-since"}},[t._v("#")]),t._v(" Etag/if-None-Match  Last-Modified/IF-Modified-Since")]),t._v(" "),a("h3",{attrs:{id:"no-cache-no-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-cache-no-store"}},[t._v("#")]),t._v(" no-cache no-store")]),t._v(" "),a("blockquote",[a("p",[t._v("no-cache就是不缓存，但是no-cache并不是不缓存，而是使用协商缓存，所以并不能禁止缓存，\nno-store才是真正的禁止缓存。从节省带宽角度讲，\n使用no-cache更优一点，文件未发生改变时只传输很小的报文大小，只有在文件改变时才会传输整个文件大小。而不是no-store不管什么情况都传输整个文件大小。")])]),t._v(" "),a("h3",{attrs:{id:"如何设置协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何设置协商缓存"}},[t._v("#")]),t._v(" 如何设置协商缓存")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location ~ .*\\.(html)$ {  // 对html文件限制缓存\n\n    add_header Cache-Control no-store;  // 不缓存\n\n    // 或者用add_header Cache-Control no-cache;替代上面那一句，协商缓存\n\n    add_header Pragma no-cache;\n\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"cache-control-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-介绍"}},[t._v("#")]),t._v(" cache-control 介绍")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Cache-directive")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("所有内容都将被缓存(客户端和代理服务器都可缓存)")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("内容只缓存到私有缓存中(仅客户端可以缓存，代理服务器不可缓存)")])]),t._v(" "),a("tr",[a("td",[t._v("no-cache")]),t._v(" "),a("td",[t._v("必须先与服务器确认返回的响应是否被更改，然后才能使用该响应来满足后续对同一个网址的请求。因此，如果存在合适的验证令牌 (ETag)，no-cache 会发起往返通信来验证缓存的响应，如果资源未被更改，可以避免下载")])]),t._v(" "),a("tr",[a("td",[t._v("no-store")]),t._v(" "),a("td",[t._v("所有内容都不会被缓存到缓存或 Internet 临时文件中")])]),t._v(" "),a("tr",[a("td",[t._v("must-revalidation/proxy-revalidation")]),t._v(" "),a("td",[t._v("如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证")])]),t._v(" "),a("tr",[a("td",[t._v("max-age=xxx (xxx is numeric)")]),t._v(" "),a("td",[t._v("缓存的内容将在 xxx 秒后失效, 这个选项只在HTTP 1.1可用, 并如果和Last-Modified一起使用时, 优先级较高")])])])])])}),[],!1,null,null,null);a.default=s.exports}}]);